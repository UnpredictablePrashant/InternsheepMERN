version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network

  authservice:
    build:
      context: ./authService
      dockerfile: Dockerfile
    container_name: authservice
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - MONGO_URI=mongodb+srv://shrikarlonkar:wYkbmyFIj9iRDmPe@cluster0.gp5lvzy.mongodb.net/intsheep
      - JWT_SECRET=someshittyjwttokenisbeingused
      - REDIS_HOST=redis # Updated to match the Docker container name
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092 # Updated to match the Docker container name
    depends_on:
      - redis
      - kafka
    networks:
      - app-network

  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - authservice
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge
